{
    "name": "vsc-elearnjs",
    "displayName": "vsc-elearnjs",
    "description": "Visual Studio Code extension for conversion of elearn.js Markdown to HTML and PDF",
    "keywords": [
        "html",
        "pdf",
        "markdown",
        "visual studio code",
        "elearn.js"
    ],
    "repository": "https://github.com/elb-min-uhh/vsc-elearnjs",
    "license": "MIT",
    "version": "1.0.14",
    "publisher": "dlminuhh",
    "engines": {
        "vscode": "^1.24.0"
    },
    "categories": [
        "Other"
    ],
    "main": "./out/main",
    "activationEvents": [
        "onLanguage:markdown",
        "onCommand:vsc-elearnjs.to-html",
        "onCommand:vsc-elearnjs.to-pdf",
        "onCommand:vsc-elearnjs.save-as"
    ],
    "contributes": {
        "commands": [
            {
                "command": "vsc-elearnjs.to-html",
                "title": "elearn.js - to HTML"
            },
            {
                "command": "vsc-elearnjs.to-pdf",
                "title": "elearn.js - to PDF"
            },
            {
                "command": "vsc-elearnjs.save-as",
                "title": "elearn.js - save as..."
            }
        ],
        "keybindings": [
            {
                "command": "vsc-elearnjs.to-html",
                "key": "ctrl+alt+o",
                "mac": "cmd+alt+o",
                "when": "resourceLangId == markdown"
            },
            {
                "command": "vsc-elearnjs.to-pdf",
                "key": "ctrl+alt+p",
                "mac": "cmd+alt+p",
                "when": "resourceLangId == markdown"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "vsc-elearnjs.to-html",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                },
                {
                    "command": "vsc-elearnjs.to-pdf",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                },
                {
                    "command": "vsc-elearnjs.save-as",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                }
            ],
            "explorer/context": [
                {
                    "command": "vsc-elearnjs.to-html",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                },
                {
                    "command": "vsc-elearnjs.to-pdf",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                },
                {
                    "command": "vsc-elearnjs.save-as",
                    "group": "vsc-elearnjs",
                    "when": "resourceLangId == markdown"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "vsc-elearnjs",
            "properties": {
                "vsc-elearnjs.general.export.keepSaveLocations": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When exporting a file for the first time, you are prompted with an export location. When checked, this will be kept after an VSCode restart."
                },
                "vsc-elearnjs.general.export.keepExportOptions": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "When exporting, you might be prompted with export options. Your selected values will be stored as defaults. When checked, those defaults will be kept after an VSCode restart."
                },
                "vsc-elearnjs.general.export.alwaysDisplayExportOptions": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "If deactivated, export options will only prompt once."
                },
                "vsc-elearnjs.general.extensionDetection.detectExtensionsMethod": {
                    "type": "string",
                    "enum": [
                        "auto",
                        "last",
                        "on",
                        "off"
                    ],
                    "enumDescriptions": [
                        "Automatic detection",
                        "Last values",
                        "Always on",
                        "Always off"
                    ],
                    "default": "auto",
                    "markdownDescription": "If deactivated, export options will only prompt once."
                },
                "vsc-elearnjs.general.section.newSectionOnHeading": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Start a new section at headings."
                },
                "vsc-elearnjs.general.section.newSectionOnHeadingDepth": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ],
                    "enumDescriptions": [
                        "H1 - # Heading",
                        "H2 - ## Heading",
                        "H3 - ### Heading",
                        "H4 - #### Heading",
                        "H5 - ##### Heading",
                        "H6 - ###### Heading"
                    ],
                    "default": 3,
                    "markdownDescription": "New sections up to depth ..."
                },
                "vsc-elearnjs.general.sectionLevels.enableSectionLevels": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Create section levels."
                },
                "vsc-elearnjs.general.sectionLevels.subsectionLevel": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ],
                    "enumDescriptions": [
                        "H1 - # Heading",
                        "H2 - ## Heading",
                        "H3 - ### Heading",
                        "H4 - #### Heading",
                        "H5 - ##### Heading",
                        "H6 - ###### Heading"
                    ],
                    "default": 3,
                    "markdownDescription": "Headings with this level or lower (bigger number) are tagged as subsection."
                },
                "vsc-elearnjs.general.sectionLevels.subSubsectionLevel": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ],
                    "enumDescriptions": [
                        "H1 - # Heading",
                        "H2 - ## Heading",
                        "H3 - ### Heading",
                        "H4 - #### Heading",
                        "H5 - ##### Heading",
                        "H6 - ###### Heading"
                    ],
                    "default": 4,
                    "markdownDescription": "Headings with this level or lower (bigger number) are tagged as sub-subsection."
                },
                "vsc-elearnjs.pdf.general.newPageOnSection": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Start a new page at a section start."
                },
                "vsc-elearnjs.pdf.general.zoom": {
                    "type": "number",
                    "default": 1,
                    "markdownDescription": "Zoom of PDF Output. Value needs to be greater than zero."
                },
                "vsc-elearnjs.pdf.general.renderDelay": {
                    "type": "number",
                    "default": 0,
                    "markdownDescription": "Delay of HTML rendering in seconds. Might be useful for delayed or remote scripts."
                },
                "vsc-elearnjs.pdf.headerAndFooter.header": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Custom header text. HTML to be set as header. Check `customHeader/customFooter` on https://github.com/elb-min-uhh/markdown-elearnjs/wiki/Conversion#pdf-converter-settings."
                },
                "vsc-elearnjs.pdf.headerAndFooter.headerHeight": {
                    "type": "string",
                    "default": "0",
                    "markdownDescription": "Units `px, cm, mm, in`. Check `headerHeight/footerHeight` on https://github.com/elb-min-uhh/markdown-elearnjs/wiki/Conversion#pdf-converter-settings for more information on supported values."
                },
                "vsc-elearnjs.pdf.headerAndFooter.footer": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Custom footer text. HTML to be set as footer. Check `customHeader/customFooter` on https://github.com/elb-min-uhh/markdown-elearnjs/wiki/Conversion#pdf-converter-settings."
                },
                "vsc-elearnjs.pdf.headerAndFooter.footerHeight": {
                    "type": "string",
                    "default": "17mm",
                    "markdownDescription": "Units `px, cm, mm, in`. Check `headerHeight/footerHeight` on https://github.com/elb-min-uhh/markdown-elearnjs/wiki/Conversion#pdf-converter-settings for more information on supported values."
                },
                "vsc-elearnjs.pdf.custom.styleFile": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "CSS style sheet. Absolute path to a .css style sheet extending or overwriting the elearn.js styles. This will be loaded before the custom scripts/styles from the meta block."
                },
                "vsc-elearnjs.pdf.chrome.downloadChrome": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "If deactivated, the extension will no longer try to download chromium on activation. Also all bundled versions will be deleted when starting the extension. You will not be able to use PDF conversion without setting the `vsc-elearnjs.pdf.chrome.path`."
                },
                "vsc-elearnjs.pdf.chrome.keepChromeAlive": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "This will reduce the PDF conversion time after the first startup if set to true. Will increase VSCode's memory usage slightly."
                },
                "vsc-elearnjs.pdf.chrome.path": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Custom Chrome Path. If you do not want or are not able to use the bundled chrome, you can set an absolute path to the chrome/chromium executable. You need to use a chrome executable compatible with `Puppeteer` in headless version."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "node scripts/prepublish.js && npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "dependencies": {
        "markdown-elearnjs": "^1.7.3",
        "path": "^0.12.7",
        "rimraf": "^2.6.2"
    },
    "devDependencies": {
        "@types/mocha": "^5.2.5",
        "@types/node": "^10.12.12",
        "@types/rimraf": "^2.0.2",
        "tslint": "^5.11.0",
        "typescript": "^3.2.1",
        "vscode": "^1.1.26"
    }
}
